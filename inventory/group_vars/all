region: "us-west-2"

clustername: "foobar"

publiczoneid: "ZOC70SORUQC4ZO"
publiczonename: "ocp4.example.com"

privatezoneid: "ZB5JSFHSIEHVAG"
privatezonename: "foobar.ocp4.example.com"

# subnet order matters, needs to be az1,az2,az3,etc
privatesubnets: "subnet-a62e89d2f27096776,subnet-965bf47c8c64ace62,subnet-69fca4cfc562cdcca"
publicsubnets: "subnet-a86c92536490376fd,subnet-dc4fa13075bf07989,subnet-80d0b5c13ba100d5e"

vpcid: "vpc-bcb26f4011256a1fd"
vpccidr: "10.30.0.0/18"

clustercidr: "10.128.0.0/14"
servicecidr: "172.30.0.0/16"

# Public AMI rhcos-410.8.20190417.1-hvm
rhcos_ami: "ami-0f6c404c76c2f94dd"

# This is used by create-encrypted-ami.yaml to tag the private AMI
# which we copy from the public AMI to enable disk
# encryption. install-upi.yaml uses this tag to find the AMI to use
# for master and worker nodes.
rhcos_version: "410.8"

worker_instance: "m5.2xlarge"
master_instance: "m4.2xlarge"

#ssh_key is optional either set or comment out
ssh_key: "ssh-rsa AAAAB3... user@example.com"

#get from try.openshift.com
pull_secret: '{"auths":{"cloud.openshift.com":{"auth":"b3BjRsRVVSdnA..... example.com"}}}'

# Additional tags to assign to the EC2 instances created by the
# installation playbook and by the OpenShift worker machine set.
#
# The "auto_shut_bool" tag is only an example, it will not do anything
# without a script that looks for this tag. AWS tags are strings, we
# have to quote the "True" value that otherwise would be sent to the
# AWS API as a boolean.
extra_instance_tags:
  auto_shut_bool: 'True'
  department: Engineering

# AWS bootstrap resources are deleted after a successful installation
# if this is set to true.
boostrap_cleanup: true

# Enable this to only expose the API internally, requires ansible host to
# be on the same network as cluster
api_internal_only: true
